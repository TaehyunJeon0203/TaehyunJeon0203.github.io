{"version":3,"file":"component---src-templates-blog-post-js-dfe3546dcadb1514f630.js","mappings":"4PA6BA,MA3BmBA,IAAwB,IAAvB,QAAEC,EAAO,KAAEC,GAAMF,EAwBnC,OAvBAG,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAAkBC,SAASC,cAAc,OAC/CF,EAAgBG,UAAUC,IAAI,iBAG9B,MAAMC,EAAYJ,SAASC,cAAc,OACzCG,EAAUC,IAAM,4DAA4DT,IAAUC,iGACtFO,EAAUE,IAAM,YAEhB,MAAMC,EAAgBP,SAASC,cAAc,KAQ7C,OAPAM,EAAcC,YAAc,MAAK,IAAIC,MAAOC,kDAE5CX,EAAgBY,YAAYP,GAC5BL,EAAgBY,YAAYJ,GAC5BP,SAASY,KAAKD,YAAYZ,GAGnB,KACLC,SAASY,KAAKC,YAAYd,MAE3B,CAACH,EAASC,IAEN,MClBT,MA+DaiB,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEI,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,WAKxD,MAxEyB7B,IAGlB,IAFLqB,MAAM,SAAES,EAAQ,KAAEC,EAAI,KAAEC,EAAMV,eAAgBC,EAAI,kBAAEU,GAAmB,SACvEC,GACDlC,EACC,MAAMC,EAAU+B,EAAKG,aAAalC,QAC5BmC,EAAaH,EAAkBI,MAAMC,MACzCC,GAAQA,EAAKC,KAAKC,KAAOlB,EAAKkB,KAC9BD,KAAKJ,WAEP,OACEZ,EAAAA,cAAA,OAAKkB,UAAU,kBACblB,EAAAA,cAACmB,EAAAA,EAAM,MACPnB,EAAAA,cAAA,WACEkB,UAAU,YACVE,WAAS,EACTC,SAAS,6BAETrB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIsB,SAAS,YAAYvB,EAAKI,YAAYD,OAC1CF,EAAAA,cAAA,SAAID,EAAKI,YAAYoB,MACrBvB,EAAAA,cAAA,SAAIY,EAAW,cAEjBZ,EAAAA,cAAA,WACEwB,wBAAyB,CAAEC,OAAQ1B,EAAK2B,MACxCJ,SAAS,gBAEXtB,EAAAA,cAAA,YAEFA,EAAAA,cAAA,OAAKkB,UAAU,iBACblB,EAAAA,cAAA,MACE2B,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGXhC,EAAAA,cAAA,UACGM,GACCN,EAAAA,cAACiC,EAAAA,KAAI,CAACC,GAAI5B,EAAS6B,OAAOC,KAAMC,IAAI,QAAO,KACtC/B,EAASH,YAAYD,QAI9BF,EAAAA,cAAA,UACGO,GACCP,EAAAA,cAACiC,EAAAA,KAAI,CAACC,GAAI3B,EAAK4B,OAAOC,KAAMC,IAAI,QAC7B9B,EAAKJ,YAAYD,MAAM,SAMlCF,EAAAA,cAACsC,EAAU,CACT7D,QAASA,EACTC,KAAMgC,EAAS6B,SACfrB,UAAU,mB","sources":["webpack://gatsby-starter-blog/./src/components/PostFooter.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import React, { useEffect } from \"react\"\n\nconst PostFooter = ({ siteUrl, path }) => {\n  useEffect(() => {\n    // 부모 요소 생성\n    const parentContainer = document.createElement(\"div\")\n    parentContainer.classList.add(\"global-footer\") // 클래스 추가\n\n    // 페이지가 마운트되었을 때, hits 서비스에 현재 페이지의 URL을 전달\n    const postVisit = document.createElement(\"img\")\n    postVisit.src = `https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=${siteUrl}${path}&count_bg=%23023327&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=Visit&edge_flat=false`\n    postVisit.alt = \"postVisit\"\n\n    const copyrightText = document.createElement(\"p\")\n    copyrightText.textContent = `© ${new Date().getFullYear()}, TaehyunJeon all rights reserved.`\n\n    parentContainer.appendChild(postVisit)\n    parentContainer.appendChild(copyrightText)\n    document.body.appendChild(parentContainer)\n\n    // 컴포넌트 언마운트 시에 정리\n    return () => {\n      document.body.removeChild(parentContainer)\n    }\n  }, [siteUrl, path])\n\n  return null\n}\n\nexport default PostFooter\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Header from \"../components/Header\"\nimport PostFooter from \"../components/PostFooter\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post, allMarkdownRemark },\n  location,\n}) => {\n  const siteUrl = site.siteMetadata.siteUrl\n  const timeToRead = allMarkdownRemark.edges.find(\n    edge => edge.node.id === post.id\n  ).node.timeToRead\n\n  return (\n    <div className=\"global-wrapper\">\n      <Header />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n          <p>{timeToRead} min read</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <PostFooter\n        siteUrl={siteUrl}\n        path={location.pathname}\n        className=\"global-footer\"\n      />\n    </div>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"YYYY. MM. DD\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    allMarkdownRemark {\n      edges {\n        node {\n          id\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","siteUrl","path","useEffect","parentContainer","document","createElement","classList","add","postVisit","src","alt","copyrightText","textContent","Date","getFullYear","appendChild","body","removeChild","Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","previous","next","site","allMarkdownRemark","location","siteMetadata","timeToRead","edges","find","edge","node","id","className","Header","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","PostFooter","pathname"],"sourceRoot":""}