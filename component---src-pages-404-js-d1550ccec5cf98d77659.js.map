{"version":3,"file":"component---src-pages-404-js-d1550ccec5cf98d77659.js","mappings":"uLAcA,MAXeA,IAAA,IAAC,MAAEC,EAAK,WAAEC,GAAYF,EAAA,OACnCG,EAAAA,cAAA,UAAQC,UAAU,iBAChBD,EAAAA,cAAA,OAAKC,UAAU,UACbD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAG,IAAIF,UAAU,gBACpBH,IAIE,ECSX,MAfeD,IAAoC,IAAnC,SAAEO,EAAQ,MAAEN,EAAK,SAAEO,GAAUR,EAC3C,MACME,EADY,MACCK,EAASE,SAE5B,OACEN,EAAAA,cAAA,OAAKC,UAAY,mBAAiBF,EAAa,OAAS,YACtDC,EAAAA,cAACO,EAAM,CAACT,MAAOA,EAAOC,WAAYA,IAClCC,EAAAA,cAAA,YAAOK,GACPL,EAAAA,cAAA,cAAQ,MACH,IAAIQ,MAAOC,cAAc,sCAE1B,C,+CCiCV,IAvCYZ,IAAuC,IAADa,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAW,MAAEf,EAAK,SAAEO,GAAUR,EAC3C,MAAM,KAAEiB,IAASC,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBH,GAAeC,EAAKG,aAAaJ,YACnDK,EAAgC,QAApBR,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBZ,MAExC,OACEE,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQkB,EAAgB,GAAEpB,OAAWoB,IAAiBpB,GACtDE,EAAAA,cAAA,QAAMmB,KAAK,cAAcC,QAASJ,IAClChB,EAAAA,cAAA,QAAMqB,SAAS,WAAWD,QAAStB,IACnCE,EAAAA,cAAA,QAAMqB,SAAS,iBAAiBD,QAASJ,IACzChB,EAAAA,cAAA,QAAMqB,SAAS,UAAUD,QAAQ,YACjCpB,EAAAA,cAAA,QAAMmB,KAAK,eAAeC,QAAQ,YAClCpB,EAAAA,cAAA,QACEmB,KAAK,kBACLC,SAA0B,QAAjBT,EAAAG,EAAKG,oBAAY,IAAAN,GAAQ,QAARC,EAAjBD,EAAmBW,cAAM,IAAAV,OAAR,EAAjBA,EAA2BW,UAAY,KAElDvB,EAAAA,cAAA,QAAMmB,KAAK,gBAAgBC,QAAStB,IACpCE,EAAAA,cAAA,QAAMmB,KAAK,sBAAsBC,QAASJ,IACzCX,EACA,C,kGCvCP,MAWamB,EAAOA,IAAMxB,EAAAA,cAACyB,EAAAA,EAAG,CAAC3B,MAAM,mBAErC,UAbqBD,IAAyB,IAAxB,KAAE6B,EAAI,SAAEtB,GAAUP,EACtC,MAAM8B,EAAYD,EAAKZ,KAAKG,aAAanB,MAEzC,OACEE,EAAAA,cAAC4B,EAAAA,EAAM,CAACxB,SAAUA,EAAUN,MAAO6B,GACjC3B,EAAAA,cAAA,UAAI,kBACJA,EAAAA,cAAA,SAAG,2DACI,C","sources":["webpack://gatsby-starter-blog/./src/components/Header.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/pages/404.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = ({ title, isRootPath }) => (\n  <header className=\"global-header\">\n    <nav className=\"navbar\">\n      <Link to=\"/\" className=\"navbar-brand\">\n        {title}\n      </Link>\n      {/* 여기에 추가적인 메뉴나 로고 등을 넣어주세요 */}\n    </nav>\n  </header>\n)\n\nexport default Header\n","// Layout.js\nimport React from \"react\"\nimport Header from \"./Header\"\nimport \"../style/layout.css\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className={`global-wrapper ${isRootPath ? \"root\" : \"subpage\"}`}>\n      <Header title={title} isRootPath={isRootPath} />\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, TaehyunJeon all rights reserved.\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["_ref","title","isRootPath","React","className","Link","to","location","children","pathname","Header","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","Head","Seo","data","siteTitle","Layout"],"sourceRoot":""}