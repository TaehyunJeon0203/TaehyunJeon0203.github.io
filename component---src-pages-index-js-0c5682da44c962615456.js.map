{"version":3,"file":"component---src-pages-index-js-0c5682da44c962615456.js","mappings":"kLAsGA,UAhGkBA,IAAyB,IAADC,EAAA,IAAvB,KAAEC,EAAI,SAAEC,GAAUH,EACnC,MAAMI,GAAkC,QAAtBH,EAAAC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBM,QAAK,QACzCC,EAAQN,EAAKO,kBAAkBC,OAC9BC,EAAiBC,GAAsBC,EAAAA,UAAe,KAE3D,GAAsB,oBAAXC,OAAwB,CAEjC,OADkBC,aAAaC,QAAQ,aACnB,MACtB,CACA,MAAO,MAAM,IAGfH,EAAAA,WAAgB,KAEd,MAAMI,EAAsBA,KAC1B,GAAsB,oBAAXH,OAAwB,CACjC,MAAMI,EAAYH,aAAaC,QAAQ,YACvCJ,EAAmBM,GAAa,OAClC,GAIIC,EAAW,IAAIC,kBAAiB,KACpC,GAAsB,oBAAXN,OAAwB,CACjC,MAAMI,EAAYH,aAAaC,QAAQ,YACvCJ,EAAmBM,GAAa,OAClC,KAcF,MAXsB,oBAAXJ,SAETA,OAAOO,iBAAiB,UAAWJ,GAGnCE,EAASG,QAAQC,SAASC,KAAM,CAC9BC,YAAY,EACZC,gBAAiB,CAAC,YAIf,KACiB,oBAAXZ,SACTA,OAAOa,oBAAoB,UAAWV,GACtCE,EAASS,aACX,CACD,GACA,IAGH,MAAMC,EAAgBrB,EAAMsB,QAC1BC,GAAQA,EAAKC,YAAYC,WAAatB,IAGxC,OAA6B,IAAzBkB,EAAcK,OAEdrB,EAAAA,cAACsB,EAAAA,EAAM,CAAChC,SAAUA,EAAUI,MAAOH,GACjCS,EAAAA,cAAA,SAAG,MACuB,SAApBF,EAA6B,KAAO,KAAK,gBAOnDE,EAAAA,cAACsB,EAAAA,EAAM,CAAChC,SAAUA,EAAUI,MAAOH,GACjCS,EAAAA,cAACuB,EAAAA,EAAG,CAAC7B,MAAM,cACXM,EAAAA,cAAA,OAAKwB,UAAU,wBACZR,EAAcS,KAAIP,GACjBlB,EAAAA,cAAC0B,EAAAA,KAAI,CACHC,GAAIT,EAAKU,OAAOC,KAChBL,UAAU,YACVM,IAAKZ,EAAKU,OAAOC,MAEjB7B,EAAAA,cAAA,OAAKwB,UAAU,6BACZN,EAAKC,YAAYY,YAChB/B,EAAAA,cAAA,OACEgC,IAAKd,EAAKC,YAAYY,WACtBE,IAAKf,EAAKC,YAAYzB,MACtB8B,UAAU,qBAIhBxB,EAAAA,cAAA,OAAKwB,UAAU,qBACbxB,EAAAA,cAAA,UAAKkB,EAAKC,YAAYzB,OACtBM,EAAAA,cAAA,OAAKwB,UAAU,kBAAkBN,EAAKC,YAAYe,MAClDlC,EAAAA,cAAA,KAAGwB,UAAU,yBACVN,EAAKC,YAAYgB,aAAejB,EAAKkB,cAMzC,C","sources":["webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport \"../style/PostCard.css\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const [currentCategory, setCurrentCategory] = React.useState(() => {\n    // 초기값을 localStorage에서 가져옴\n    if (typeof window !== \"undefined\") {\n      const savedType = localStorage.getItem(\"blogType\")\n      return savedType || \"tech\"\n    }\n    return \"tech\"\n  })\n\n  React.useEffect(() => {\n    // localStorage 변경 감지\n    const handleStorageChange = () => {\n      if (typeof window !== \"undefined\") {\n        const savedType = localStorage.getItem(\"blogType\")\n        setCurrentCategory(savedType || \"tech\")\n      }\n    }\n\n    // body 클래스 변경 감지\n    const observer = new MutationObserver(() => {\n      if (typeof window !== \"undefined\") {\n        const savedType = localStorage.getItem(\"blogType\")\n        setCurrentCategory(savedType || \"tech\")\n      }\n    })\n\n    if (typeof window !== \"undefined\") {\n      // Storage 이벤트 리스너 추가\n      window.addEventListener(\"storage\", handleStorageChange)\n\n      // body 클래스 변경 감지\n      observer.observe(document.body, {\n        attributes: true,\n        attributeFilter: [\"class\"],\n      })\n    }\n\n    return () => {\n      if (typeof window !== \"undefined\") {\n        window.removeEventListener(\"storage\", handleStorageChange)\n        observer.disconnect()\n      }\n    }\n  }, [])\n\n  // 현재 카테고리에 맞는 포스트만 필터링\n  const filteredPosts = posts.filter(\n    post => post.frontmatter.category === currentCategory\n  )\n\n  if (filteredPosts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\n          아직 {currentCategory === \"tech\" ? \"기술\" : \"일상\"} 포스트가 없습니다.\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <div className=\"post-cards-container\">\n        {filteredPosts.map(post => (\n          <Link\n            to={post.fields.slug}\n            className=\"post-card\"\n            key={post.fields.slug}\n          >\n            <div className=\"post-card-image-container\">\n              {post.frontmatter.titleImage && (\n                <img\n                  src={post.frontmatter.titleImage}\n                  alt={post.frontmatter.title}\n                  className=\"post-card-image\"\n                />\n              )}\n            </div>\n            <div className=\"post-card-content\">\n              <h2>{post.frontmatter.title}</h2>\n              <div className=\"post-card-date\">{post.frontmatter.date}</div>\n              <p className=\"post-card-description\">\n                {post.frontmatter.description || post.excerpt}\n              </p>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY. MM. DD\")\n          title\n          titleImage\n          description\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","currentCategory","setCurrentCategory","React","window","localStorage","getItem","handleStorageChange","savedType","observer","MutationObserver","addEventListener","observe","document","body","attributes","attributeFilter","removeEventListener","disconnect","filteredPosts","filter","post","frontmatter","category","length","Layout","Seo","className","map","Link","to","fields","slug","key","titleImage","src","alt","date","description","excerpt"],"sourceRoot":""}