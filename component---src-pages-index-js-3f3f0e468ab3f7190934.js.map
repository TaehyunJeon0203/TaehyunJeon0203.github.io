{"version":3,"file":"component---src-pages-index-js-3f3f0e468ab3f7190934.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/Profile.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\"\nimport \"../style/Profile.css\"\n\nconst Profile = ({ profile }) => {\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-content\">\n        <div className=\"profile-image-container\">\n          <img\n            src=\"/images/profile.jpg\"\n            alt=\"프로필 사진\"\n            className=\"profile-image\"\n            onError={e => {\n              e.target.style.display = \"none\"\n              e.target.nextSibling.style.display = \"block\"\n            }}\n          />\n          <div\n            className=\"profile-image-placeholder\"\n            style={{ display: \"none\" }}\n          >\n            👨‍💻\n          </div>\n        </div>\n        <div className=\"profile-info\">\n          <h1 className=\"profile-name\">{profile.name}</h1>\n          <div className=\"profile-links\">\n            <a\n              href={profile.links.github}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"profile-link github\"\n            >\n              <svg viewBox=\"0 0 24 24\" className=\"profile-icon\">\n                <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\n              </svg>\n              GitHub\n            </a>\n            <a\n              href={`mailto:${profile.links.email}`}\n              className=\"profile-link email\"\n            >\n              <svg viewBox=\"0 0 24 24\" className=\"profile-icon\">\n                <path d=\"M0 3v18h24v-18h-24zm21.518 2l-9.518 7.713-9.518-7.713h19.036zm-19.518 14v-11.817l10 8.104 10-8.104v11.817h-20z\" />\n              </svg>\n              Email\n            </a>\n            <a\n              href={profile.links.instagram}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"profile-link instagram\"\n            >\n              <svg viewBox=\"0 0 24 24\" className=\"profile-icon\">\n                <path d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\" />\n              </svg>\n              Instagram\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Profile from \"../components/Profile\"\nimport \"../style/PostCard.css\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const profile = data.site.siteMetadata?.profile\n  const posts = data.allMarkdownRemark.nodes\n  const [currentCategory, setCurrentCategory] = React.useState(() => {\n    // 초기값을 localStorage에서 가져옴\n    if (typeof window !== \"undefined\") {\n      const savedType = localStorage.getItem(\"blogType\")\n      return savedType || \"tech\"\n    }\n    return \"tech\"\n  })\n\n  React.useEffect(() => {\n    // localStorage 변경 감지\n    const handleStorageChange = () => {\n      if (typeof window !== \"undefined\") {\n        const savedType = localStorage.getItem(\"blogType\")\n        setCurrentCategory(savedType || \"tech\")\n      }\n    }\n\n    // body 클래스 변경 감지\n    const observer = new MutationObserver(() => {\n      if (typeof window !== \"undefined\") {\n        const savedType = localStorage.getItem(\"blogType\")\n        setCurrentCategory(savedType || \"tech\")\n      }\n    })\n\n    if (typeof window !== \"undefined\") {\n      // Storage 이벤트 리스너 추가\n      window.addEventListener(\"storage\", handleStorageChange)\n\n      // body 클래스 변경 감지\n      observer.observe(document.body, {\n        attributes: true,\n        attributeFilter: [\"class\"],\n      })\n    }\n\n    return () => {\n      if (typeof window !== \"undefined\") {\n        window.removeEventListener(\"storage\", handleStorageChange)\n        observer.disconnect()\n      }\n    }\n  }, [])\n\n  // 현재 카테고리에 맞는 포스트만 필터링\n  const filteredPosts = posts.filter(\n    post => post.frontmatter.category === currentCategory\n  )\n\n  if (filteredPosts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <p>\n          아직 {currentCategory === \"tech\" ? \"기술\" : \"일상\"} 포스트가 없습니다.\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"\" />\n      <Profile profile={profile} />\n      <div className=\"post-cards-container\">\n        {filteredPosts.map(post => (\n          <Link\n            to={post.fields.slug}\n            className=\"post-card\"\n            key={post.fields.slug}\n          >\n            <div className=\"post-card-image-container\">\n              {post.frontmatter.titleImage && (\n                <img\n                  src={post.frontmatter.titleImage}\n                  alt={post.frontmatter.title}\n                  className=\"post-card-image\"\n                />\n              )}\n            </div>\n            <div className=\"post-card-content\">\n              <h2>{post.frontmatter.title}</h2>\n              <div className=\"post-card-meta\">\n                <time className=\"post-card-date\">{post.frontmatter.date}</time>\n                <span className=\"post-card-read-time\">\n                  {post.fields.customTimeToRead} min read\n                </span>\n              </div>\n              <p className=\"post-card-description\">\n                {post.frontmatter.description || post.excerpt}\n              </p>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        profile {\n          name\n          image\n          links {\n            github\n            email\n            instagram\n          }\n        }\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        timeToRead\n        fields {\n          slug\n          customTimeToRead\n        }\n        frontmatter {\n          date(formatString: \"YYYY. MM. DD\")\n          title\n          titleImage\n          description\n          category\n        }\n      }\n    }\n  }\n`\n"],"names":["_ref","profile","React","className","src","alt","onError","e","target","style","display","nextSibling","name","href","links","github","rel","viewBox","d","email","instagram","_data$site$siteMetada","_data$site$siteMetada2","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","currentCategory","setCurrentCategory","window","localStorage","getItem","handleStorageChange","savedType","observer","MutationObserver","addEventListener","observe","document","body","attributes","attributeFilter","removeEventListener","disconnect","filteredPosts","filter","post","frontmatter","category","length","Layout","Seo","Profile","map","Link","to","fields","slug","key","titleImage","date","customTimeToRead","description","excerpt"],"sourceRoot":""}