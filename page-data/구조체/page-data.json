{"componentChunkName":"component---src-templates-blog-post-js","path":"/구조체/","result":{"data":{"site":{"siteMetadata":{"title":"TH Blog","siteUrl":"https://taehyunjeon0203.github.io"}},"markdownRemark":{"id":"6f3653c6-76ff-536b-8098-11cc17992456","excerpt":"1. 구조체 변수의 선언과 초기화 구조체를 선언한 후에는 해당 구조체의 변수를 선언하고 초기화할 수 있습니다. 2. 구조체 멤버 접근 구조체의 멤버에 접근할 때는  연산자를 사용합니다. 3. 중첩 구조체 구조체 안에 다른 구조체를 포함시킬 수 있습니다. 이를 중첩 구조체라고 합니다.…","html":"<h2>1. 구조체 변수의 선언과 초기화</h2>\n<p>구조체를 선언한 후에는 해당 구조체의 변수를 선언하고 초기화할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> 구조체_이름 변수_이름<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 예시</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span> person1<span class=\"token punctuation\">;</span>\nperson1<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//혹은 선언과 동시에 초기화</span>\n<span class=\"token keyword\">struct</span> 구조체_이름 변수_이름 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>값<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 값<span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 예시</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span> person1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">175.5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>2. 구조체 멤버 접근</h2>\n<p>구조체의 멤버에 접근할 때는 <code class=\"language-text\">.</code> 연산자를 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\">person1<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>3. 중첩 구조체</h2>\n<p>구조체 안에 다른 구조체를 포함시킬 수 있습니다. 이를 중첩 구조체라고 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Address</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> city<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">char</span> street<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Address</span> address<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>4. typedef를 이용한 구조체 별칭 정의</h2>\n<p>typedef를 사용하여 구조체에 대한 별칭을 정의할 수 있습니다. 이를 통해 코드를 보다 간결하고 가독성 있게 작성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> 구조체_이름 <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 구조체 멤버들</span>\n<span class=\"token punctuation\">}</span> 별칭<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 예시</span>\n<span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> height<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> Person<span class=\"token punctuation\">;</span></code></pre></div>\n<h2>5. 구조체 포인터</h2>\n<p>구조체 포인터를 사용하여 구조체의 멤버에 접근할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span> person1<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span> <span class=\"token operator\">*</span>ptr <span class=\"token operator\">=</span> <span class=\"token operator\">&amp;</span>person1<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 포인터를 이용한 멤버 접근</span>\n<span class=\"token comment\">// 또는</span>\nptr<span class=\"token operator\">-></span>age <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 화살표 연산자를 이용한 멤버 접근</span></code></pre></div>\n<h2>6. 구조체 배열</h2>\n<p>구조체 배열을 선언하여 여러 구조체를 한 번에 관리할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span> people<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\npeople<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">30</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>7. 구조체와 함수</h2>\n<p>구조체를 함수의 매개변수로 전달하여 구조체를 다루는 함수를 작성할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token keyword\">void</span> <span class=\"token function\">printPerson</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span> p<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Name: %s\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Age: %d\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Height: %.2f\\n\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 호출</span>\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Person</span> person1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"John\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> <span class=\"token number\">175.5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">printPerson</span><span class=\"token punctuation\">(</span>person1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h2>예제</h2>\n<h4>구조체를 사용하여 사용자로부터 두 명의 학생 정보를 입력받아 저장하고, 입력된 정보를 출력하는 프로그램을 작성하세요.</h4>\n<p>입력 형식:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">[이름] [나이] [평균 성적]</code></pre></div>\n<p>출력 결과:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">학생 정보:\n이름: [이름1]\n나이: [나이1]\n평균 성적: [평균 성적1]\n\n학생 정보:\n이름: [이름2]\n나이: [나이2]\n평균 성적: [평균 성적2]</code></pre></div>\n<p>답:</p>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">char</span> name<span class=\"token punctuation\">[</span><span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> gpa<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">Student</span> student1<span class=\"token punctuation\">,</span> student2<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 첫 번째 학생 정보 입력</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"첫 번째 학생 정보 입력:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s %d %f\"</span><span class=\"token punctuation\">,</span> student1<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>student1<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>student1<span class=\"token punctuation\">.</span>gpa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 두 번째 학생 정보 입력</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"두 번째 학생 정보 입력:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s %d %f\"</span><span class=\"token punctuation\">,</span> student2<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>student2<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>student2<span class=\"token punctuation\">.</span>gpa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 첫 번째 학생 정보 출력</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n학생 정보:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이름: %s\\n\"</span><span class=\"token punctuation\">,</span> student1<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나이: %d\\n\"</span><span class=\"token punctuation\">,</span> student1<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"평균 성적: %.2f\\n\"</span><span class=\"token punctuation\">,</span> student1<span class=\"token punctuation\">.</span>gpa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 두 번째 학생 정보 출력</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n학생 정보:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이름: %s\\n\"</span><span class=\"token punctuation\">,</span> student2<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나이: %d\\n\"</span><span class=\"token punctuation\">,</span> student2<span class=\"token punctuation\">.</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"평균 성적: %.2f\\n\"</span><span class=\"token punctuation\">,</span> student2<span class=\"token punctuation\">.</span>gpa<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"구조체","date":"2024. 05. 14","description":"SA교육자료_전태현"}},"previous":{"fields":{"slug":"/japanwithbro/"},"frontmatter":{"title":"동경을 동경하며"}},"next":{"fields":{"slug":"/포인터/"},"frontmatter":{"title":"포인터"}},"allMarkdownRemark":{"edges":[{"node":{"id":"1f58ea2a-1c73-59b8-b8c5-a514a2db1a75","timeToRead":1}},{"node":{"id":"0c72841d-8abd-59dc-ba75-04fef5f57401","timeToRead":1}},{"node":{"id":"6805073b-b961-550d-8074-b9ce4288bd18","timeToRead":1}},{"node":{"id":"9d6ef04d-43cf-568a-85d3-54744e4986b0","timeToRead":2}},{"node":{"id":"185014ac-fd7e-5f92-9e7a-00de2384cee9","timeToRead":1}},{"node":{"id":"56c85338-9d29-5471-b6e0-b440055fd18f","timeToRead":1}},{"node":{"id":"52688c97-3fbb-572f-b880-540415aa27a7","timeToRead":3}},{"node":{"id":"6f3653c6-76ff-536b-8098-11cc17992456","timeToRead":2}},{"node":{"id":"c4db1e3a-06eb-5055-97fb-763ac984a1b2","timeToRead":1}}]}},"pageContext":{"id":"6f3653c6-76ff-536b-8098-11cc17992456","previousPostId":"9d6ef04d-43cf-568a-85d3-54744e4986b0","nextPostId":"c4db1e3a-06eb-5055-97fb-763ac984a1b2"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}