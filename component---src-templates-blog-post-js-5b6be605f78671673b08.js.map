{"version":3,"file":"component---src-templates-blog-post-js-5b6be605f78671673b08.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/components/Logo.js","webpack://gatsby-starter-blog/./src/components/Header.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react';\n\nconst Logo = ({\n    width = '256',\n    height = '256',\n    fill = '#f0f6fc',\n    className\n}) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={width}\n    height={height}\n    viewBox=\"0 0 100 100\"\n    className={className}\n  >\n    <path\n        fill={fill}\n        d=\"M 400.80029 50.100586 C 400.10029 50.200586 396.8998 50.700684 393.7998 51.200684 L 388.00049 52.199707 L 388.00049 82.599609 L 388.00049 112.99951 L 394.99951 112.99951 L 402 112.99951 L 402 81.499512 C 402 56.899536 401.70029 50.000586 400.80029 50.100586 z M 222 58.999512 L 222 66 C 222 69.799996 222.19951 73.000488 222.49951 73.000488 C 222.79951 73.000488 225.70049 71.600487 229.00049 70.000488 C 232.30048 68.30049 235.39951 67.000488 235.99951 67.000488 C 236.59951 67.000488 237 74.900015 237 90 L 237 112.99951 L 244.5 112.99951 L 252 112.99951 L 252 90 C 252 77.300013 252.19951 67.000488 252.49951 67.000488 C 252.79951 67.000488 255.70049 68.30049 259.00049 70.000488 C 262.30048 71.600487 265.2 73.000488 265.5 73.000488 C 265.8 73.000488 265.99951 69.799996 265.99951 66 L 265.99951 58.999512 L 244.00049 58.999512 L 222 58.999512 z M 271.00049 58.999512 L 271.00049 85.999512 L 271.00049 113.10059 L 278.2998 112.80029 L 285.49951 112.5 L 285.7998 100.70068 L 286.1001 88.999512 L 291.49951 88.999512 L 297 88.999512 L 297 100.99951 L 297 112.99951 L 304.5 112.99951 L 312 112.99951 L 312 85.999512 L 312 58.999512 L 304.5 58.999512 L 297 58.999512 L 297 69.499512 L 297 79.999512 L 291.49951 79.999512 L 286.00049 79.999512 L 286.00049 69.499512 L 286.00049 58.999512 L 278.50049 58.999512 L 271.00049 58.999512 z M 342 58.999512 L 342 85.700684 L 342 112.5 L 356.90039 112.00049 C 370.00038 111.60049 372.2001 111.20039 374.6001 109.40039 C 379.40009 105.90039 381.30029 102.3996 381.30029 97.599609 C 381.30029 92.499614 379.2 88.700583 375 86.100586 L 372 84.300293 L 374.2998 83.100586 C 379.9998 80.100589 382.00039 69.799604 377.90039 64.599609 C 374.10039 59.699614 371.2995 58.999512 355.99951 58.999512 L 342 58.999512 z M 358.99951 66 C 360.09951 66 361.9 66.899513 363 67.999512 C 367 71.999508 364.49941 81 359.39941 81 C 357.09942 81 357 80.799993 357 73.5 C 357 66.700007 357.19951 66 358.99951 66 z M 473.1123 68.187012 C 471.24981 68.149512 469.40068 68.500684 466.70068 69.200684 C 455.50069 72.200681 451.19991 86.599812 459.3999 93.799805 L 462.7002 96.700195 L 459.7998 99.799805 C 456.89981 103.0998 456.39951 105.4 457.99951 108 C 458.59951 109.1 458.09931 110.10049 455.79932 112.00049 C 447.79932 118.70048 455.59953 127.89932 469.99951 128.79932 C 484.5995 129.69932 494.69981 123.10009 495.7998 112.1001 C 496.1998 107.5001 495.9997 106.79951 493.19971 103.99951 C 490.19971 101.09951 489.9996 100.99951 480.09961 100.99951 C 473.99962 100.99951 469.99951 100.60049 469.99951 100.00049 C 469.99951 99.400489 471.69932 99 473.79932 99 C 478.39931 99 484.69952 96.100094 487.99951 92.600098 C 490.09951 90.3001 490.5 88.800386 490.5 83.900391 C 490.5 77.600397 490.10049 77.899611 496.00049 79.599609 C 497.80049 80.099609 498 79.700582 498 75.600586 L 498 70.999512 L 491.2998 70.999512 C 487.49981 70.999512 482.30009 70.299511 479.6001 69.499512 C 476.8501 68.649513 474.9748 68.224512 473.1123 68.187012 z M 428.57373 68.225098 C 425.79405 68.300098 423.675 68.824806 421.5 69.799805 C 410.50001 74.8998 405.89942 90.999426 411.89941 102.89941 C 414.19941 107.39941 416.49932 109.49951 421.29932 111.49951 C 429.39931 114.89951 440.39971 112.29941 445.19971 105.89941 C 448.6997 101.19942 450 96.699797 450 89.299805 C 450 76.499817 443.40009 68.899804 431.6001 68.299805 C 430.5001 68.224805 429.50029 68.200098 428.57373 68.225098 z M 472.18799 75.099609 C 472.77549 75.174609 473.39951 75.600391 474.49951 76.400391 C 476.79951 78.100389 477.89951 88.199514 475.99951 90.499512 C 474.19951 92.69951 472.29941 92.300485 470.39941 89.500488 C 468.29942 86.300491 468.10059 77.199413 470.10059 75.899414 C 471.05058 75.299415 471.60049 75.024609 472.18799 75.099609 z M 429.22998 76.107422 C 430.93374 76.043262 432.74443 77.03174 433.70068 79.000488 C 435.40068 82.300485 435.40068 99.700492 433.70068 103.00049 C 431.90069 106.50048 428.4999 106.8 426.3999 103.5 C 424.2999 100.3 423.90039 81.80068 425.90039 78.200684 C 426.64414 76.844435 427.90484 76.157324 429.22998 76.107422 z M 359.39941 88.999512 C 360.79941 88.999512 362.5999 89.700587 363.3999 90.600586 C 364.9999 92.100584 365.40059 94.200005 365.10059 99 C 364.90059 101.9 361.5999 105 358.8999 105 C 357.1999 105 357 104.20048 357 97.000488 C 357 89.200496 357.09942 88.999512 359.39941 88.999512 z M 474 112.81201 C 478.625 112.82451 483.2502 113.4502 483.7002 114.7002 C 484.10019 115.70019 483.50058 117.0001 482.10059 118.1001 C 475.80059 123.20009 461.99981 120.60058 464.2998 114.60059 C 464.7498 113.40059 469.375 112.79951 474 112.81201 z \"\n    />\n  </svg>\n);\n\nexport default Logo;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport Logo from './Logo';\n\nconst Header = ({ title }) => {\n    return (\n        <header className=\"global-header\">\n            <nav className=\"navbar\">\n            <Link to=\"/\" className=\"navbar-brand\">\n                <Logo width=\"100\" height=\"100\" className=\"custom-logo-class\"/>\n            </Link>\n            {/* 여기에 추가적인 메뉴나 로고 등을 넣어주세요 */}\n            </nav>\n        </header>\n    );\n};\n\nexport default Header\n","// Layout.js\nimport React from \"react\"\nimport Header from \"./Header\"\nimport \"../style/layout.css\"\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n\n  return (\n    <div className={`global-wrapper ${isRootPath ? \"root\" : \"subpage\"}`}>\n      <Header title={title} />\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, TaehyunJeon all rights reserved.\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","name","summary","_ref","width","height","fill","xmlns","viewBox","d","title","Link","to","Logo","location","children","isRootPath","pathname","Header","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","metaDescription","defaultTitle","content","property","twitter","Head","_ref2","markdownRemark","post","Seo","frontmatter","excerpt","previous","next","siteTitle","Layout","itemScope","itemType","itemProp","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","fields","slug","rel"],"sourceRoot":""}